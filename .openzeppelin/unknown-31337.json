{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xd3d0d598E6BD0a6B667c4e8B0C3C11c20bb1f089",
      "txHash": "0xabc245da5cdeb7216426fbfe6102586073ac917966fcb1a65a60649ac5194dbb",
      "kind": "uups"
    },
    {
      "address": "0x7F00A7d1Cf59dCf0857aD6bDa376ecaA0662aD9C",
      "txHash": "0xbade2c8ef9c38dd48aba73e47f83814c4fa8b4c3c63f37330aa5b814c9a31c4b",
      "kind": "uups"
    },
    {
      "address": "0xabF6775E971E933B15CfB6785BDac4E589Bf3859",
      "txHash": "0x574a5f3546583d0fb4a336266532ae2ff81e39e541be4eae461f40d15b6773af",
      "kind": "uups"
    },
    {
      "address": "0x69FDC34D9deC661EB590515a5194Ce19d52B4596",
      "txHash": "0x6e306ac7ac29f7061254ac99a6db9a24a3519e109f9b6c1b0be72d7049fbec41",
      "kind": "uups"
    },
    {
      "address": "0x69dd60b4a7Bf521Dd7bFA1871FaB6C237191191d",
      "txHash": "0x38a571876c64f81b57ed782601db159637d6538941cb600452ef82555bb4ebbb",
      "kind": "uups"
    },
    {
      "address": "0x335Ea63013DEcc3e270D6E095A460530c552CF3E",
      "txHash": "0xead35b1730cdb97da162465b587b54363cbf983fab5dc71a9b519ea1e32d3a74",
      "kind": "uups"
    },
    {
      "address": "0x7c07edcB223c16d4b2fB373C476030c41f8027ae",
      "txHash": "0x937d1425f2f44db04c9017f24b72d77336c211e5e5e68e814a69304d5e3864a5",
      "kind": "uups"
    },
    {
      "address": "0x03E67e085e65B361c1A5cf17d8F1EcfEbAC1ccfB",
      "txHash": "0x91676a8f8df335d65ef8beee22c3583936906e7099d0f2c5876394a4d391ac3a",
      "kind": "uups"
    },
    {
      "address": "0x3D5a8E8348418a5051Dbe91863562A915E1C0FC0",
      "txHash": "0x10f851baeba22948f7a3f896aacceb592e73aee2add2f938f3c20a8caf6d752e",
      "kind": "uups"
    },
    {
      "address": "0x9230Bfd38f0f4DD2F0cB3100Bf24Dddb4eDB2ef7",
      "txHash": "0xae58a2ae420293812ec2d2a8cec3744d956b1247a42786e94e992bbc8577f181",
      "kind": "uups"
    }
  ],
  "impls": {
    "681f0f49f1ad4b740f7d22557d60be64ed5ddeb9b15d85808f4cfe10b9be40ea": {
      "address": "0x4BCD98b42fd74c8f386E650848773e841A5d332B",
      "txHash": "0x63536ddd3e4d6a3f0cbdce71cb2b8b26874728c65e0aeb53ea16287c486ed304",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "getUSDFeed",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_contract(AggregatorV3Interface)19024)",
            "contract": "PriceOracle",
            "src": "contracts/PriceOracle.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)19024": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_contract(AggregatorV3Interface)19024)": {
            "label": "mapping(address => contract AggregatorV3Interface)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c357f76752a7866420d47ae3fafa680f491b0e7f22caeee1997c345b145bfe5c": {
      "address": "0x95Ab5dC337E8F2FB3B68B336cb72B68Dd43e72A4",
      "txHash": "0x189858504d6c5ec546a03a2e27c91a1f0528379275151690e46afdad053c7358",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)8133_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "154",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "155",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "201",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_struct(Counter)11286_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "254",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)11286_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)8133_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)11286_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)8133_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a6d236ee3a30c6ebe38c042b6c019e7dda79ce57fc3f47e439d1e0f35fde96ef": {
      "address": "0xD08e07A277a7D24659D6F0babd2915d0c9f3BC3A",
      "txHash": "0x70ff21f121b442d830aeaaeef9551644fed0a18cbbdfba484092e28c53043437",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "getUSDFeed",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_contract(AggregatorV3Interface)45)",
            "contract": "PriceOracle",
            "src": "contracts/PriceOracle.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_contract(AggregatorV3Interface)45)": {
            "label": "mapping(address => contract AggregatorV3Interface)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7c6321b08efc99f3645d1747d5d2d7a47f196bdec6b3f0803736c08ee61e4ed9": {
      "address": "0xfEeEba86Eff29b9Ba49A6389876247ebFD465584",
      "txHash": "0xbfc8dd853a4a42b01ea0724a06e419f795012bb0024c5c078b16d9aa6b87bf25",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "DNR",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IDinero)8060",
            "contract": "ERC20Market",
            "src": "contracts/ERC20Market.sol:144"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "ERC20Market",
            "src": "contracts/ERC20Market.sol:150"
          },
          {
            "label": "COLLATERAL",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "ERC20Market",
            "src": "contracts/ERC20Market.sol:157"
          },
          {
            "label": "liquidationFee",
            "offset": 20,
            "slot": "203",
            "type": "t_uint96",
            "contract": "ERC20Market",
            "src": "contracts/ERC20Market.sol:160"
          },
          {
            "label": "ORACLE",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IPriceOracle)19590",
            "contract": "ERC20Market",
            "src": "contracts/ERC20Market.sol:167"
          },
          {
            "label": "maxBorrowAmount",
            "offset": 0,
            "slot": "205",
            "type": "t_uint128",
            "contract": "ERC20Market",
            "src": "contracts/ERC20Market.sol:175"
          },
          {
            "label": "maxLTVRatio",
            "offset": 16,
            "slot": "205",
            "type": "t_uint128",
            "contract": "ERC20Market",
            "src": "contracts/ERC20Market.sol:178"
          },
          {
            "label": "loan",
            "offset": 0,
            "slot": "206",
            "type": "t_struct(Rebase)7406_storage",
            "contract": "ERC20Market",
            "src": "contracts/ERC20Market.sol:184"
          },
          {
            "label": "loanTerms",
            "offset": 0,
            "slot": "207",
            "type": "t_struct(LoanTerms)16182_storage",
            "contract": "ERC20Market",
            "src": "contracts/ERC20Market.sol:191"
          },
          {
            "label": "userAccount",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_struct(Account)16175_storage)",
            "contract": "ERC20Market",
            "src": "contracts/ERC20Market.sol:199"
          },
          {
            "label": "_unlocked",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "ERC20Market",
            "src": "contracts/ERC20Market.sol:269"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IDinero)8060": {
            "label": "contract IDinero",
            "numberOfBytes": "20"
          },
          "t_contract(IPriceOracle)19590": {
            "label": "contract IPriceOracle",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(Account)16175_storage)": {
            "label": "mapping(address => struct ERC20Market.Account)",
            "numberOfBytes": "32"
          },
          "t_struct(Account)16175_storage": {
            "label": "struct ERC20Market.Account",
            "members": [
              {
                "label": "collateral",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "principal",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LoanTerms)16182_storage": {
            "label": "struct ERC20Market.LoanTerms",
            "members": [
              {
                "label": "lastAccrued",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "interestRate",
                "type": "t_uint64",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "feesEarned",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Rebase)7406_storage": {
            "label": "struct Rebase",
            "members": [
              {
                "label": "elastic",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "base",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    }
  }
}
